@model IEnumerable<MapLocation>
@inject IOptionsSnapshot<BlogSettings> settings
@{
    string host = Context.Request.Scheme + "://" + Context.Request.Host;

    var json = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(@Model, Newtonsoft.Json.Formatting.None));
}

@section Head {
   

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
   integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
   crossorigin=""/>

<style class="text/css">
    #map { height: 380px; }
</style>
}

<article class="post container" itemscope itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
    <header>
        <h1 itemprop="name headline">Glen's dinners</h1>
        
    </header>

    <div itemprop="articleBody mainEntityOfPage" cdnify>
 
    </div>
    <div>

<div class="container mt-3 mt-sm-5" id="app">
  <div class="row">
    <div class="col-md-10">
      <div class="map" id="map"></div>
    </div>
    <div class="col-md-2">
        <h5>Filters (not yet active)</h5>
        <br/>
      <div
        class="form-check"
        v-for="layer in layers"
        :key="layer.id"
      >
        <label class="form-check-label">

          <input
            class="form-check-input"
            type="checkbox"
            v-model="layer.active"
            v-on:change="layerChanged(layer.id, layer.active)"
          />
          {{ layer.name }}
        </label>
      </div>
    </div>
  </div>
</div>



    </div>
    <footer>


    </footer>
</article>



@section Scripts {



 <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
   integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
   crossorigin=""></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.3.4/vue.min.js"></script>
<!-- 
<script src="js/app.js"></script>
-->
<script type="text/javascript">


 new Vue({
  el: '#app',
  data: {
    map: null,
    tileLayer: null,
    layers: [
      {
        id: 0,
        name: 'Indians',
        active: false,
        features: @json,
        },
      {
        id: 1,
        name: 'Other',
        active: false,
        features: @json,
      }
    ],
  },
  mounted() {
    this.initMap();
    this.initLayers();
  },
  methods: {
    layerChanged(layerId, active) {
      const layer = this.layers.find(layer => layer.id === layerId);

          /*
      layer.features.forEach((feature) => {
        if (active) {
          feature.leafletObject.addTo(this.map);
        } else {
          feature.leafletObject.removeFrom(this.map);
        }
      });
      */

        layer.features.forEach((feature) => {
          feature.leafletObject.addTo(this.map);
         });
    },
    initLayers() {
      this.layers.forEach((layer) => {
        const markerFeatures = layer.features.filter(feature => feature.type === 'marker');
        //const polygonFeatures = layer.features.filter(feature => feature.type === 'polygon');
        
        markerFeatures.forEach((feature) => {
          feature.leafletObject = L.marker(feature.coords)
            .bindPopup("<a href='blog/" + feature.slug + "/'>" + feature.name + "</a>");
        });
        /*
        polygonFeatures.forEach((feature) => {
          feature.leafletObject = L.polygon([feature.Latitude,feature.Longitude])
            .bindPopup(feature.name);
        });
        */

         // show the layer - remove this if we switch to just using checkboxes
         layer.features.forEach((feature) => {
          feature.leafletObject.addTo(this.map);
         });
      });
    },
    initMap() {
      this.map = L.map('map').setView([53.18, -2.83], 8);
      this.tileLayer = L.tileLayer(
        'https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png',
        {
          maxZoom: 18,
          attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attribution">CARTO</a>',
        }
      );
        
      this.tileLayer.addTo(this.map);
    },
  },
});


</script>



}