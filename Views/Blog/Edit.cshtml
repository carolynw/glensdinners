@model Post
@{
    bool isNew = string.IsNullOrEmpty(Model.Title);
    ViewData["Title"] = "Edit " + (Model.Title ?? "new post");
}

@section Head{
<meta charset="utf-8">

    <link rel="stylesheet" href="~/css/admin.scss" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
       integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
       crossorigin=""/>

    <style type="text/css">
    #Latitude, #Longitude { text-align:right }
    #map { width:100%;height:180px;padding:0;margin:0; }
    .address { cursor:pointer }
    .address:hover { color:#AA0000;text-decoration:underline }
    </style>
}

<div class="container">
<form method="post" id="edit" class="container" asp-controller="Blog" asp-action="UpdatePost">
    <div asp-validation-summary="All"></div>
    <input type="hidden" asp-for="@Model.ID" />

    <label asp-for="@Model.Title" class="label">Title</label>
    <input asp-for="@Model.Title" required placeholder="Title of blog post" aria-describedby="desc_title" />
    <span class="desc" id="desc_title">The title as it appears on the website</span>
    <br />

    <label asp-for="@Model.Slug" class="label">Slug</label>
    <input asp-for="@Model.Slug" placeholder="The URL name" aria-describedby="desc_slug" />
    <span class="desc" id="desc_slug">The part of the URL that identifies this blog post</span>
    <br />

    <label for="categories" class="label">Tags</label>
    <input type="text" name="categories" id="categories" value="@string.Join(", ", Model.Categories)" aria-describedby="desc_categories" />
    <span class="desc" id="desc_categories">A comma separated list of keywords</span>
    <br />

    <label asp-for="@Model.Excerpt" class="label">Excerpt</label>
    <textarea asp-for="@Model.Excerpt" rows="3" placeholder="Short description of blog post" aria-describedby="desc_excerpt">@Model.Excerpt</textarea>
    <span class="desc" id="desc_excerpt">A brief description of the content of the post</span>
    <br />

    <textarea asp-for="@Model.Content" rows="20" aria-label="Content">@Model.Content</textarea>
    <br />

    <div class="row">
        <span class="col-md-5">
          <label asp-for="@Model.Latitude" class="label">Latitude</label>
            <input asp-for="@Model.Latitude" placeholder="Lat"/>
        </span>
        <span class="col-md-5">
          <label asp-for="@Model.Longitude" class="label">Longitude</label>
            <input asp-for="@Model.Longitude" placeholder="Long"/>
        </span>
    </div>
  
    <br />

    <input type="submit" value="Save post" title="Save the post" class="btn btn-lg btn-primary" />

    <br/>
    <b>Address Lookup</b>
    <div id="search">
    <input type="text" name="addr" value="" id="addr" size="58" />
    <button type="button" onclick="addr_search();">Search</button>
    <div id="results"></div>
    </div>

    <br />




    @if (!isNew)
    {
        <input type="submit" value="Delete..." class="delete" title="Delete the post..." asp-action="DeletePost" asp-route-id="@Model.ID" />
    }

    <input asp-for="@Model.IsPublished" />
    <label asp-for="@Model.IsPublished">Is published</label>
</form>
</div>

    <div id="map"></div>


@section Scripts {
    <script src="~/lib/tinymce/tinymce.min.js"></script>
    <script src="~/js/admin.js" async></script>


 <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
   integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
   crossorigin=""></script>

<!-- lookup location -->
<script type="text/javascript">

// New York
var startlat = 40.75637123;
var startlon = -73.98545321;

var options = {
 center: [startlat, startlon],
 zoom: 9
}
/*
document.getElementById('Latitude').value = startlat;
document.getElementById('Longitude').value = startlon;
*/
var map = L.map('map', options);
var nzoom = 12;

L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {attribution: 'OSM'}).addTo(map);

var myMarker = L.marker([startlat, startlon], {title: "Coordinates", alt: "Coordinates", draggable: true}).addTo(map).on('dragend', function() {
 var lat = myMarker.getLatLng().lat.toFixed(8);
 var lon = myMarker.getLatLng().lng.toFixed(8);
 var czoom = map.getZoom();
 if(czoom < 18) { nzoom = czoom + 2; }
 if(nzoom > 18) { nzoom = 18; }
 if(czoom != 18) { map.setView([lat,lon], nzoom); } else { map.setView([lat,lon]); }
 document.getElementById('Latitude').value = lat;
 document.getElementById('Longitude').value = lon;
 myMarker.bindPopup("Lat " + lat + "<br />Lon " + lon).openPopup();
});

function chooseAddr(lat1, lng1)
{
 myMarker.closePopup();
 map.setView([lat1, lng1],18);
 myMarker.setLatLng([lat1, lng1]);
 lat = lat1.toFixed(8);
 lon = lng1.toFixed(8);
 document.getElementById('Latitude').value = lat;
 document.getElementById('Longitude').value = lon;
 myMarker.bindPopup("Lat " + lat + "<br />Lon " + lon).openPopup();
}

function myFunction(arr)
{
 var out = "<br />";
 var i;

 if(arr.length > 0)
 {
  for(i = 0; i < arr.length; i++)
  {
   out += "<div class='address' title='Show Location and Coordinates' onclick='chooseAddr(" + arr[i].lat + ", " + arr[i].lon + ");return false;'>" + arr[i].display_name + "</div>";
  }
  document.getElementById('results').innerHTML = out;
 }
 else
 {
  document.getElementById('results').innerHTML = "Sorry, no results...";
 }

}

function addr_search()
{
 var inp = document.getElementById("addr");
 var xmlhttp = new XMLHttpRequest();
 var url = "https://nominatim.openstreetmap.org/search?format=json&limit=3&q=" + inp.value;
 xmlhttp.onreadystatechange = function()
 {
   if (this.readyState == 4 && this.status == 200)
   {
    var myArr = JSON.parse(this.responseText);
    myFunction(myArr);
   }
 };
 xmlhttp.open("GET", url, true);
 xmlhttp.send();
}

</script>
}